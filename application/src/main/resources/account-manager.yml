openapi: 3.0.3
info:
  title: Account-manager WhiteBoard
  description: Componente responsável por criar e gerenciar contas.
  version: 1.0.0
tags:
  - name: Conta
    description: Operações do usuário
  - name: Validação
    description: Permissões de acesso
servers:
  - url: http://localhost
paths:
  /v1/new/user:
    post:
      tags:
        - Conta
      operationId: createNewUser
      summary: Cria uma nova conta
      description: Gera uma nova conta no site.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewAccountRequestPresentation'
        required: true
      responses:
        '200':
          description: Cadastrado com sucesso
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponsePresentation'
        '400':
          description: Dados de cadastros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroNegocioPresentation'
        '500':
          description: Ocorreu um erro interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroPresentation'
  /v1/user/{usuarioId}:
    get:
      tags:
        - Busca
      operationId: findUserByID
      summary: Procura por usuário usando o ID
      description: Busca pelo usuário no banco de dados.
      parameters:
        - name: usuarioId
          in: path
          description: ID do usuário.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponsePresentation'
        '400':
          description: Dados de cadastros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroNegocioPresentation'
        '500':
          description: Ocorreu um erro interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroPresentation'
  /v1/findUser:
    post:
      tags:
        - Busca
      operationId: findUserByFilter
      summary: Procura por usuários usando filtros
      description: Busca por usuários no banco de dados de acordo com os filtros.
      requestBody:
        description: Filtros
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FiltrosAccountRequestPresentation'
      responses:
        '200':
          description: Usuário encontrado
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/AccountResponsePresentation'
        '400':
          description: Dados de cadastros inválidos
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroNegocioPresentation'
        '500':
          description: Ocorreu um erro interno
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErroPresentation'
components:
  schemas:
    ErroPresentation:
      type: object
      properties:
        code:
          type: integer
          example: 500
        message:
          type: string
          example: "Erro de validacao"
        correlationError:
          type: string
          example: "ERRO_PARAMETROS_INVALIDOS"
    ErroNegocioPresentation:
      type: object
      properties:
        code:
          type: string
          example: "400"
        message:
          type: string
          example: "Erro de validacao"
    EnderecoPresentation:
      type: object
      properties:
        rua:
          type: string
          example: "437 Lytton"
        cidade:
          type: string
          example: "Palo Alto"
        estado:
          type: string
          example: "MG"
        cep:
          type: string
          example: '94301'
    NewAccountRequestPresentation:
      type: object
      properties:
        nome:
          type: string
          example: "Gabriel"
        cpf:
          type: string
          example: "00000000000"
        email:
          type: string
          example: "teste@gmail.com"
        endereco:
          $ref: '#/components/schemas/EnderecoPresentation'
        dataNascimento:
          type: string
          format: date
    AccountResponsePresentation:
      type: object
      properties:
        id:
          type: string
          example: "f3de6149-da14-4716-bfe4-cbbcc74702a7"
        nome:
          type: string
          example: "Gabriel"
        cpf:
          type: string
          example: "00000000000"
        email:
          type: string
          example: "teste@gmail.com"
        endereco:
          $ref: '#/components/schemas/EnderecoPresentation'
        dataNascimento:
          type: string
        status:
          type: string
          description: Como se encontra a conta A | B | F
          example: "A"
        dataInclusao:
          type: string
    FiltrosAccountRequestPresentation:
      type: object
      properties:
        filtros:
          $ref: '#/components/schemas/FiltroPresentation'
    FiltroPresentation:
      type: array
      items:
        properties:
          campo:
            type: string
            example: "cpf"
          valor:
            type: string
            example: "00000000000"



